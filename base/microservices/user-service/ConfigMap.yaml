apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
  namespace: microservices
  labels:
    app: user-service
    component: microservices
data:
  application.yml: |
    server:
      port: 8080
      error:
        include-stacktrace: on_param
        include-message: always
    
    spring:
      application:
        name: user-service
      profiles:
        active: docker,kafka
      config:
        import: optional:configserver:${SPRING_CLOUD_CONFIG_URI:http://config-server.infrastructure.svc.cluster.local:8888}
      
      # Database Configuration
      datasource:
        url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres-service.data.svc.cluster.local:5432/userdb}
        username: ${SPRING_DATASOURCE_USERNAME:userservice}
        password: ${SPRING_DATASOURCE_PASSWORD:userservice123}
        driver-class-name: org.postgresql.Driver
      
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            format_sql: true
      
      # Redis Configuration
      data:
        redis:
          host: ${SPRING_DATA_REDIS_HOST:redis-service.data.svc.cluster.local}
          port: ${SPRING_DATA_REDIS_PORT:6379}
          timeout: 2000ms
          database: ${SPRING_DATA_REDIS_DATABASE:1}
          lettuce:
            pool:
              max-active: 8
              max-idle: 8
              min-idle: 0
              max-wait: -1ms
      
      # Kafka Configuration
      kafka:
        bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka-service.data.svc.cluster.local:9092}
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        consumer:
          group-id: user-service-group
          auto-offset-reset: earliest
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          properties:
            spring.json.trusted.packages: "*"
    
    # Eureka Configuration
    eureka:
      instance:
        preferIpAddress: true
        instanceId: ${spring.application.name}:${server.port}
        hostname: user-service
        metadataMap:
          instanceId: ${spring.application.name}:${server.port}
      client:
        registryFetchIntervalSeconds: 5
        instanceInfoReplicationIntervalSeconds: 5
        initialInstanceInfoReplicationIntervalSeconds: 5
        eurekaServiceUrlPollIntervalSeconds: 5
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
          defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://eureka-server.infrastructure.svc.cluster.local:8761/eureka}
    
    # JWT Configuration
    app:
      jwtSecret: ${JWT_SECRET:defaultSecretKey}
      jwtExpirationMs: ${JWT_EXPIRATION:86400000}
    
    # Management and Monitoring
    management:
      health:
        circuitbreakers:
          enabled: true
        redis:
          enabled: true
        db:
          enabled: true
      endpoint:
        health:
          show-details: "ALWAYS"
          show-components: "ALWAYS"
        metrics:
          enabled: true
      endpoints:
        web:
          exposure:
            include: "*"
          cors:
            allowed-origins: "*"
            allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
      metrics:
        distribution:
          percentiles-histogram:
            http.server.requests: true
          percentiles:
            http.server.requests: 0.5, 0.95, 0.99
        tags:
          application: ${spring.application.name}
    
    # Logging Configuration
    logging:
      level:
        com.nexuscommerce.userservice: INFO
        org.springframework.security: DEBUG
        org.springframework.web: INFO
        org.hibernate.SQL: WARN
        org.hibernate.type.descriptor.sql.BasicBinder: WARN
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    
    # SpringDoc Configuration
    springdoc:
      api-docs:
        enabled: true
        path: /v3/api-docs
      swagger-ui:
        enabled: true
        path: /swagger-ui.html