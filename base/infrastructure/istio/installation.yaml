apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    name: istio-system
    istio-injection: disabled
  annotations:
    argocd.argoproj.io/sync-wave: "-1"  # Create namespace first
---
# Second: Install Istio Base (CRDs)
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-base
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"  # Install CRDs first
spec:
  project: default
  source:
    repoURL: https://istio-release.storage.googleapis.com/charts
    chart: base
    targetRevision: 1.20.0
    helm:
      values: |
        defaultRevision: default
        validationURL: ""
        istiodRemote:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - Replace=true
    retry:
      limit: 5
      backoff:
        duration: 30s
        factor: 2
        maxDuration: 5m
---
# Third: Install Istio Control Plane
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-istiod
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"  # Install control plane after CRDs
spec:
  project: default
  source:
    repoURL: https://istio-release.storage.googleapis.com/charts
    chart: istiod
    targetRevision: 1.20.0
    helm:
      values: |
        revision: ""
        pilot:
          traceSampling: 100.0
          env:
            PILOT_TRACE_SAMPLING: 100
            PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
        global:
          meshID: nexus-commerce
          multiCluster:
            clusterName: nexus-commerce-cluster
          network: nexus-commerce-network
          tracer:
            zipkin:
              address: zipkin-server.infrastructure:9411
        telemetry:
          v2:
            enabled: true
            prometheus:
              configOverride:
                metric_relabeling_configs:
                  - source_labels: [__name__]
                    regex: 'istio_.*'
                    action: keep
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 30s
        factor: 2
        maxDuration: 5m
---
# Fourth: Install Istio Gateway
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-gateway
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"  # Install gateway after control plane
spec:
  project: default
  source:
    repoURL: https://istio-release.storage.googleapis.com/charts
    chart: gateway
    targetRevision: 1.20.0
    helm:
      values: |
        service:
          type: LoadBalancer
          ports:
            - port: 15021
              targetPort: 15021
              name: status-port
              protocol: TCP
            - port: 80
              targetPort: 8080
              name: http2
              protocol: TCP
            - port: 443
              targetPort: 8443
              name: https
              protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        autoscaling:
          enabled: false
        replicaCount: 1
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: false
      selfHeal: false
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 30s
        factor: 2
        maxDuration: 5m