apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  namespace: infrastructure
  labels:
    app: config-server
    component: infrastructure
spec:
  replicas: 2
  selector:
    matchLabels:
      app: config-server
  template:
    metadata:
      labels:
        app: config-server
        component: infrastructure
    spec:
      containers:
        - name: config-server
          image: yahyazakaria123/ecommerce-app-config-service:latest
          ports:
            - containerPort: 8888
              name: http
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "docker"
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # FIXED: Correct Eureka URL with full service DNS name
            - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
              value: "http://eureka-server.infrastructure.svc.cluster.local:8761/eureka"
            - name: SPRING_CLOUD_CONFIG_SERVER_GIT_URI
              value: "https://github.com/Saoudyahya/Ecommerce-App-Config-serveur-repo"
            # Eureka client timing configuration
            - name: EUREKA_CLIENT_INITIAL_INSTANCE_INFO_REPLICATION_INTERVAL_SECONDS
              value: "10"
            - name: EUREKA_CLIENT_REGISTRY_FETCH_INTERVAL_SECONDS
              value: "10"
            - name: EUREKA_INSTANCE_LEASE_RENEWAL_INTERVAL_IN_SECONDS
              value: "10"
            - name: EUREKA_INSTANCE_LEASE_EXPIRATION_DURATION_IN_SECONDS
              value: "20"
            # Instance configuration
            - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
              value: "true"
          volumeMounts:
            - name: config-server-config
              mountPath: /config/application.yml
              subPath: application.yml
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          # Health probes
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8888
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8888
            initialDelaySeconds: 90
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 20
      # Wait for Eureka server to be ready
      initContainers:
        - name: wait-for-eureka
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for Eureka server to be ready..."
              until nc -z eureka-server.infrastructure.svc.cluster.local 8761; do
                echo "Eureka server not ready yet, sleeping..."
                sleep 10
              done
              echo "Eureka server is ready!"
              # Additional wait to ensure Eureka is fully initialized
              sleep 30
      volumes:
        - name: config-server-config
          configMap:
            name: config-server-config
      restartPolicy: Always