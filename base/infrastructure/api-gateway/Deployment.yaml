# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api-gateway
#   namespace: infrastructure
#   labels:
#     app: api-gateway
#     component: infrastructure
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: api-gateway
#   template:
#     metadata:
#       labels:
#         app: api-gateway
#         component: infrastructure
#     spec:
#       containers:
#       - name: api-gateway
#         image: yahyazakaria123/ecommerce-app-api-gateway-service:latest
#         ports:
#         - containerPort: 8099
#           name: http
#         env:
#         - name: SPRING_PROFILES_ACTIVE
#           value: "docker,kafka"
#         - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
#           value: "http://eureka-server:8761/eureka"
#         - name: SPRING_CLOUD_CONFIG_URI
#           value: "http://config-server:8888"
#         - name: SPRING_APPLICATION_NAME
#           value: "gateway-service"
#         - name: SERVER_PORT
#           value: "8099"
#         # Reference existing data layer services
#         - name: SPRING_DATA_REDIS_HOST
#           value: "redis-service.data.svc.cluster.local"  # Cross-namespace reference
#         - name: SPRING_DATA_REDIS_PORT
#           value: "6379"
#         - name: SPRING_DATA_REDIS_DATABASE
#           value: "0"
#         - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
#           value: "kafka-service.data.svc.cluster.local:9092"  # Cross-namespace reference
#         # Other environment variables remain the same...
#         resources:
#           requests:
#             memory: "512Mi"
#             cpu: "250m"
#           limits:
#             memory: "1Gi"
#             cpu: "500m"
#         livenessProbe:
#           httpGet:
#             path: /actuator/health
#             port: 8099
#           initialDelaySeconds: 90
#           periodSeconds: 30
#         readinessProbe:
#           httpGet:
#             path: /actuator/health/readiness
#             port: 8099
#           initialDelaySeconds: 60
#           periodSeconds: 10
#         startupProbe:
#           httpGet:
#             path: /actuator/health
#             port: 8099
#           initialDelaySeconds: 30
#           periodSeconds: 10
#           failureThreshold: 18
#       initContainers:
#       # Wait for data layer services to be ready
#       - name: wait-for-redis
#         image: busybox:1.35
#         command: ['sh', '-c', 'until nc -z redis-service.data.svc.cluster.local 6379; do echo waiting for redis; sleep 2; done;']
#       - name: wait-for-kafka
#         image: busybox:1.35
#         command: ['sh', '-c', 'until nc -z kafka-service.data.svc.cluster.local 9092; do echo waiting for kafka; sleep 2; done;']
#       - name: wait-for-eureka
#         image: busybox:1.35
#         command: ['sh', '-c', 'until nc -z eureka-server 8761; do echo waiting for eureka; sleep 2; done;']
#       - name: wait-for-config-server
#         image: busybox:1.35
#         command: ['sh', '-c', 'until nc -z config-server 8888; do echo waiting for config server; sleep 2; done;']
