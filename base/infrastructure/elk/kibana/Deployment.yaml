apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: infrastructure
  labels:
    app: kibana
    component: infrastructure
    tier: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
        component: infrastructure
        tier: logging
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.11.0
          ports:
            - containerPort: 5601
              name: http
          env:
            # FIXED: Cleaned up environment variables for 8.x compatibility
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch.infrastructure.svc.cluster.local:9200"
            - name: SERVER_NAME
              value: "kibana"
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: SERVER_PORT
              value: "5601"
            - name: XPACK_SECURITY_ENABLED
              value: "false"
            - name: MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED
              value: "true"
            - name: LOGGING_ROOT_LEVEL
              value: "info"
            # Removed problematic timeout configurations
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: kibana-config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
            - name: kibana-data
              mountPath: /usr/share/kibana/data
          # FIXED: More realistic probe timings for Kibana 8.x
          livenessProbe:
            httpGet:
              path: /api/status
              port: 5601
              httpHeaders:
                - name: kbn-xsrf
                  value: "true"
            initialDelaySeconds: 120  # Reduced from 300
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/status
              port: 5601
              httpHeaders:
                - name: kbn-xsrf
                  value: "true"
            initialDelaySeconds: 60   # Reduced from 180
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /api/status
              port: 5601
              httpHeaders:
                - name: kbn-xsrf
                  value: "true"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 20      # Allow up to 3.5 minutes for startup
      volumes:
        - name: kibana-config
          configMap:
            name: kibana-config
        - name: kibana-data
          emptyDir: {}
      initContainers:
        - name: wait-for-elasticsearch
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for Elasticsearch to be ready..."
              until wget -q --spider --timeout=10 http://elasticsearch.infrastructure.svc.cluster.local:9200/_cluster/health?wait_for_status=yellow&timeout=30s; do 
                echo "Elasticsearch not ready, waiting 10 seconds..."
                sleep 10
              done
              echo "Elasticsearch is ready!"
              # Additional wait to ensure Elasticsearch is fully initialized
              echo "Waiting additional 30 seconds for Elasticsearch to fully initialize..."
              sleep 30