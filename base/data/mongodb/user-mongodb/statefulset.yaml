apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: user-mongodb
  namespace: data
  labels:
    app: user-mongodb
    component: data
    service: user-service
    tier: database
spec:
  serviceName: user-mongodb-headless
  replicas: 2
  selector:
    matchLabels:
      app: user-mongodb
  template:
    metadata:
      labels:
        app: user-mongodb
        component: data
        service: user-service
        tier: database
    spec:
      nodeSelector:
        node-role: data
      containers:
        - name: mongodb
          image: mongo:7.0
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-mongodb-secret
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-mongodb-secret
                  key: password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: user-mongodb-config
                  key: database-name
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-config
              mountPath: /data/configdb
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

          # FIXED: Health checks with proper authentication
          livenessProbe:
            exec:
              command:
                - bash
                - -c
                - |
                  mongosh --username $MONGO_INITDB_ROOT_USERNAME --password $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --eval "db.adminCommand('ping')" --quiet
            initialDelaySeconds: 120   # Increased for MongoDB 7.0
            periodSeconds: 30
            timeoutSeconds: 20         # Increased timeout
            failureThreshold: 3

          readinessProbe:
            exec:
              command:
                - bash
                - -c
                - |
                  mongosh --username $MONGO_INITDB_ROOT_USERNAME --password $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --eval "db.adminCommand('ping')" --quiet
            initialDelaySeconds: 60    # Increased for proper startup
            periodSeconds: 15
            timeoutSeconds: 20         # Increased timeout
            failureThreshold: 5        # More tolerant

          startupProbe:
            # Use TCP probe first for basic connectivity
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 60       # Allow 10 minutes for startup (30s + 60*10s)

      # Pod Anti-Affinity for High Availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: user-mongodb
                topologyKey: kubernetes.io/hostname

  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
        labels:
          app: user-mongodb
          component: data
          service: user-service
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: standard
        resources:
          requests:
            storage: 5Gi
    - metadata:
        name: mongodb-config
        labels:
          app: user-mongodb
          component: data
          service: user-service
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: standard
        resources:
          requests:
            storage: 1Gi
