apiVersion: v1
kind: ConfigMap
metadata:
  name: zipkin-config
  namespace: infrastructure
  labels:
    app: zipkin
    component: infrastructure
data:
  application.yml: |
    server:
      port: 9411
    
    spring:
      application:
        name: zipkin-server
      profiles:
        active: docker
    
    # Eureka client configuration for Zipkin
    eureka:
      instance:
        hostname: ${EUREKA_INSTANCE_HOSTNAME:zipkin-server}
        prefer-ip-address: true
        lease-renewal-interval-in-seconds: 10
        lease-expiration-duration-in-seconds: 20
        health-check-url-path: /actuator/health
        status-page-url-path: /actuator/info
        home-page-url-path: /zipkin
        instance-id: ${spring.application.name}:${server.port}
      client:
        register-with-eureka: true
        fetch-registry: true
        service-url:
          defaultZone: http://eureka-server.infrastructure:8761/eureka/
        registry-fetch-interval-seconds: 10
        initial-instance-info-replication-interval-seconds: 10
        instance-info-replication-interval-seconds: 10
        eureka-service-url-poll-interval-seconds: 10
    
    # Zipkin storage configuration
    zipkin:
      storage:
        type: mem
        # For production, consider using elasticsearch
        # elasticsearch:
        #   hosts: elasticsearch.data:9200
        #   index: zipkin
      collector:
        http:
          enabled: true
        kafka:
          enabled: false
    
    # Management endpoints for health checks
    management:
      endpoints:
        web:
          exposure:
            include: health,info,env,metrics
      endpoint:
        health:
          show-details: always
      health:
        defaults:
          enabled: true
    
    # Logging configuration
    logging:
      level:
        zipkin2: INFO
        org.springframework.cloud.netflix.eureka: INFO
        com.netflix.discovery: INFO