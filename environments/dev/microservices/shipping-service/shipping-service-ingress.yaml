apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shipping-service-ingress
  namespace: microservices
  annotations:
    # Basic ingress configuration
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Shipping-ID,X-Tracking-Number"
    nginx.ingress.kubernetes.io/enable-cors: "true"

    # Body size for shipping data and file uploads
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"

    # Rate limiting for shipping operations
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-key: "$binary_remote_addr"

    # SSL and security headers
    nginx.ingress.kubernetes.io/ssl-redirect: "false"  # Disabled for dev
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"

    # Custom headers for tracking and debugging
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "X-Environment: development";
      more_set_headers "X-Service: shipping-service";

    # Development-specific annotations
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/access-log-path: "/var/log/nginx/shipping-access.log"

spec:
  ingressClassName: nginx

  rules:
    # Main shipping service API
    - host: shipping.nexus-commerce.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082

    # Alternative API endpoints for different shipping functions
    - host: shipping-api.nexus-commerce.local
      http:
        paths:
          - path: /api/v1/shipping
            pathType: Prefix
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082
          - path: /api/v1/tracking
            pathType: Prefix
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082
          - path: /api/v1/addresses
            pathType: Prefix
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082
          - path: /api/v1/location-updates
            pathType: Prefix
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082

    # Health and monitoring endpoints
    - host: shipping-monitor.nexus-commerce.local
      http:
        paths:
          - path: /health
            pathType: Exact
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082
          - path: /info
            pathType: Exact
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082
          - path: /metrics
            pathType: Exact
            backend:
              service:
                name: shipping-service
                port:
                  number: 8082